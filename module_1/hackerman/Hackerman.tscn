[gd_scene load_steps=14 format=2]

[ext_resource path="res://global/generic_interactive/GenericInteractive.tscn" type="PackedScene" id=1]
[ext_resource path="res://module_1/hackerman/characters.png" type="Texture" id=2]
[ext_resource path="res://module_1/hackerman/message_box.png" type="Texture" id=3]
[ext_resource path="res://module_1/hackerman/circular_hud_shadow.png" type="Texture" id=4]
[ext_resource path="res://module_1/hackerman/hackerman_theme.tres" type="Theme" id=5]
[ext_resource path="res://fonts/SourceCodePro-Regular.ttf" type="DynamicFontData" id=6]
[ext_resource path="res://module_1/hackerman/terminal_font.tres" type="DynamicFont" id=7]

[sub_resource type="Shader" id=1]
code = "// From Godot Shaders: https://godotshaders.com/shader/matrix-rain/

shader_type canvas_item;

uniform sampler2D chars;
uniform sampler2D noise_tex; 

void fragment() {
	// Random character
	vec2 uv = fract(UV * 256.0); // loop uv 32 times for the characters (as the noise resolution is 32x32)
	float noise = texture(noise_tex, UV).g;
	noise = round(noise * 10.0) / 10.0; // make sure the color value are snapped by 0.1 (so its only 0.0, 0.1, 0.2, and so on) for perfect offset
	uv.x = (uv.x / 10.0) - 0.005; // offset
	uv.x += noise; // offset every character by the noise value
	uv.x += round(TIME * 0.01 * 10.0)/10.0; // animate characters with TIME, then snapped by 0.1 so it doesnt slide. 0.5 is the speed, you might want to change that
	
	// distortion
	float rain = UV.y; // this is a vertical gradient
	float distortion = texture(noise_tex, UV / vec2(1.0, 128.0)).g; // this will be used for distortion, using previous noise but only horizontal
	distortion = round(distortion * 10.0) / 10.0; // for precision reason, you need to round your distortion too, otherwise some character wouldnt be fully shown
	rain -= round(TIME * 0.1 * 256.0) / 256.0; // the 'rain' shouldn't move smoothly right? also, 0.2 is the speed
	rain += distortion; // distort this gradient, turning it into a rain
	rain = fract(rain); // loop the rain
	rain = round(rain * 128.0) / 128.0; // pixelate the rain. Rounding by 32.0 or 8.0 is optional
	rain = pow(rain, 3.0); // this is not necessary, i just think that it looks good
	rain *= 0.5; // this is also not important, just making the characters brighter
	
	COLOR.rgb = texture(chars, uv).rgb * rain * vec3(0.0, 1.0, 0.0); // finally multiply them together then multiply with green for the color
}"

[sub_resource type="OpenSimplexNoise" id=3]
seed = 887
octaves = 2
period = 0.1
persistence = 0.0

[sub_resource type="NoiseTexture" id=4]
width = 256
height = 256
noise = SubResource( 3 )

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/chars = ExtResource( 2 )
shader_param/noise_tex = SubResource( 4 )

[sub_resource type="DynamicFont" id=5]
size = 32
font_data = ExtResource( 6 )

[sub_resource type="DynamicFont" id=6]
size = 24
font_data = ExtResource( 6 )

[node name="Hackerman" instance=ExtResource( 1 )]

[node name="Game" type="Control" parent="." index="2"]
anchor_right = 1.0
anchor_bottom = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Background" type="ColorRect" parent="Game" index="0"]
material = SubResource( 2 )
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.0390625, 0.0390625, 0.0390625, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="MainContainer" type="HBoxContainer" parent="Game" index="1"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 40.0
margin_top = 40.0
margin_right = -40.0
margin_bottom = -40.0
custom_constants/separation = 150
alignment = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="SequenceContainer" type="CenterContainer" parent="Game/MainContainer" index="0"]
margin_left = 10.0
margin_right = 750.0
margin_bottom = 1000.0

[node name="TextureRect" type="TextureRect" parent="Game/MainContainer/SequenceContainer" index="0"]
margin_top = 125.0
margin_right = 740.0
margin_bottom = 875.0
rect_min_size = Vector2( 740, 750 )
texture = ExtResource( 4 )
expand = true

[node name="CircleContainer" type="CenterContainer" parent="Game/MainContainer/SequenceContainer/TextureRect" index="0"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 20.0
margin_top = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LabelsContainer" type="VBoxContainer" parent="Game/MainContainer/SequenceContainer/TextureRect/CircleContainer" index="0"]
margin_left = 160.0
margin_top = 293.0
margin_right = 560.0
margin_bottom = 416.0
custom_constants/separation = 20

[node name="SequenceLabel" type="Label" parent="Game/MainContainer/SequenceContainer/TextureRect/CircleContainer/LabelsContainer" index="0"]
margin_right = 400.0
margin_bottom = 62.0
rect_min_size = Vector2( 400, 0 )
theme = ExtResource( 5 )
text = "3 3 3 4 7 8 0"
align = 1
autowrap = true

[node name="Timer" type="Label" parent="Game/MainContainer/SequenceContainer/TextureRect/CircleContainer/LabelsContainer" index="1"]
margin_top = 82.0
margin_right = 400.0
margin_bottom = 123.0
theme = ExtResource( 5 )
custom_fonts/font = SubResource( 5 )
text = "60.00"
align = 1

[node name="TerminalContainer" type="VBoxContainer" parent="Game/MainContainer" index="1"]
margin_left = 900.0
margin_right = 1830.0
margin_bottom = 1000.0
custom_constants/separation = 40

[node name="GraphViewRect" type="NinePatchRect" parent="Game/MainContainer/TerminalContainer" index="0"]
modulate = Color( 1, 1, 1, 0.705882 )
margin_right = 930.0
margin_bottom = 400.0
rect_min_size = Vector2( 930, 400 )
texture = ExtResource( 3 )

[node name="VBoxContainer" type="VBoxContainer" parent="Game/MainContainer/TerminalContainer/GraphViewRect" index="0"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 5.0
margin_top = 10.0
margin_right = -5.0
margin_bottom = -5.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="NodeViewLabel" type="Label" parent="Game/MainContainer/TerminalContainer/GraphViewRect/VBoxContainer" index="0"]
margin_right = 920.0
margin_bottom = 20.0
rect_min_size = Vector2( 0, 20 )
custom_fonts/font = ExtResource( 7 )
text = "Node View:"

[node name="Container" type="Container" parent="Game/MainContainer/TerminalContainer/GraphViewRect/VBoxContainer" index="1"]
margin_top = 24.0
margin_right = 920.0
margin_bottom = 374.0
rect_min_size = Vector2( 0, 350 )

[node name="TerminalRect" type="NinePatchRect" parent="Game/MainContainer/TerminalContainer" index="1"]
modulate = Color( 1, 1, 1, 0.705882 )
margin_top = 440.0
margin_right = 930.0
margin_bottom = 990.0
rect_min_size = Vector2( 930, 550 )
texture = ExtResource( 3 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TerminalContainer" type="VBoxContainer" parent="Game/MainContainer/TerminalContainer/TerminalRect" index="0"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 5.0
margin_top = 10.0
margin_right = -5.0
margin_bottom = -10.0
rect_min_size = Vector2( 920, 0 )
custom_constants/separation = 5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TerminalOutput" type="RichTextLabel" parent="Game/MainContainer/TerminalContainer/TerminalRect/TerminalContainer" index="0"]
margin_right = 925.0
margin_bottom = 485.0
rect_min_size = Vector2( 910, 485 )
custom_fonts/normal_font = ExtResource( 7 )
text = "Hackerman Kernel version 2.2.7 --- Loaded
Copyright (C) 2021, 2022
Maritimes Gameworks. All rights reserved. (not really lol)

Enter a command to begin. Type 'help' for a list of commands.
"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TerminalInput" type="LineEdit" parent="Game/MainContainer/TerminalContainer/TerminalRect/TerminalContainer" index="1"]
margin_top = 490.0
margin_right = 925.0
margin_bottom = 540.0
rect_min_size = Vector2( 925, 50 )
custom_fonts/font = SubResource( 6 )
placeholder_text = "Enter commands here..."
caret_blink = true

[node name="PauseMenuLabel" type="Label" parent="Game" index="2"]
margin_left = 10.0
margin_top = 10.0
margin_right = 132.0
margin_bottom = 14.0
custom_fonts/font = ExtResource( 7 )
text = "[Esc.]: Pause Menu"
__meta__ = {
"_edit_use_anchors_": false
}
